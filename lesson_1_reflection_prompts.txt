How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Fill in your answer here

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Fill in your answer here

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Fill in your answer here

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Fill in your answer here

How can you use the commands git log and git diff to view the history of files?

    Fill in your answer here

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here








git log
#check the commmits once at a time

git log --stat
# can see either commit message and modified message

git diff [commit id 1] [commit id 2]

git --version

git clone [URL]

git config --global color.ui auto
#get colored diff output

git checkout [commit id]
# resetting all you files when they commit

cd ~
# navigate to root directory

git config --global core.editor "'D:/Program\ Files\ \(x86\)/Sublime\ Text\ 3/sublime_text.exe' -n -w"
git config --global push.default upstream
git config --global merge.conflictstyle diff3
# print in git bash.exe to configure your git-bash when it starts
alias subl="D:/Program\ Files\ \(x86\)/Sublime\ Text\ 3/sublime_text.exe"
# print in the last sentence of .bash_profile

mv [file name 1] [file name 2]
# rename file 1 to 2